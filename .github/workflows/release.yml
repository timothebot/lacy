name: "Build and Release"

on:
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0
      - name: Get version
        id: get_version
        uses: SebRollen/toml-action@b1b3628f55fc3a28208d4203ada8b737e9687876
        with:
          file: Cargo.toml
          field: package.version
      - name: Install Rust
        uses: actions-rs/toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Setup cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0
        with:
          key: ${{ matrix.target }}
      - name: Install cross
        if: ${{ runner.os == 'Linux' }}
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --color=always --git=https://github.com/cross-rs/cross.git --locked --rev=e281947ca900da425e4ecea7483cfde646c8a1ea --verbose cross
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target=${{ matrix.target }} --color=always --verbose
          use-cross: ${{ runner.os == 'Linux' }}
      - name: Package (*nix)
        env:
          BINARY_NAME: "lacy"
        run: |
          tar -c -C target/${{ matrix.target }}/release/ $BINARY_NAME |
              gzip --best > \
              $BINARY_NAME-${{ steps.get_version.outputs.value }}-${{ matrix.target }}.tar.gz
      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: ${{ matrix.target }}
          path: |
            *.tar.gz
            *.zip
            Cargo.lock
      - name: Create release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090
        with:
          draft: true
          files: |
            *.tar.gz
            *.zip
            Cargo.lock
          name: v${{ steps.get_version.outputs.value }}
          tag_name: ${{ github.ref_name }}

  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0
      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
