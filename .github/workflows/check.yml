name: Rust Code Checks

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0

      # make sure all code has been formatted with rustfmt
      - run: rustup component add rustfmt
      - name: check rustfmt
        run: cargo fmt -- --check --color always

      # run clippy to verify we have no warnings
      - run: rustup component add clippy
      - run: cargo fetch
      - name: cargo clippy
        run: cargo clippy --all-targets -- -D warnings

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0
      - run: cargo fetch
      - name: cargo test build
        run: cargo build --tests --release
      - name: cargo test
        shell: bash
        run: cargo test --release
      - name: detects powershell
        if: ${{ matrix.os != 'macos-14' }}
        shell: pwsh
        run: cargo test --release -- --ignored is_powershell_true
      - name: doesn't detect powershell
        if: ${{ matrix.os != 'macos-14' }}
        shell: bash
        run: cargo test --release -- --ignored is_powershell_false
